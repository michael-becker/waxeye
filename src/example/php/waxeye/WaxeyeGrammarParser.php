<?php

use parser\config\Automata;
use parser\config\Automaton;
use parser\config\ParserConfig;
use parser\expression\Expression;
use parser\expression\Expressions;
use parser\NonTerminalMode;
use parser\Parser;

class WaxeyeGrammarParser extends Parser
{
    public function __construct()
{
        $automata = new Automata();

$automata["Grammar"] = new Automaton("Grammar", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::NonTerminalExpression("Ws"), Expression::StarExpression(Expression::NonTerminalExpression("Definition"))));
    $automata["Definition"] = new Automaton("Definition", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::NonTerminalExpression("Identifier"), Expression::AltExpression(Expression::NonTerminalExpression("LeftArrow"), Expression::NonTerminalExpression("PruneArrow"), Expression::NonTerminalExpression("VoidArrow")), Expression::NonTerminalExpression("Alternation"), Expression::NonTerminalExpression("Ws")));
    $automata["Alternation"] = new Automaton("Alternation", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::NonTerminalExpression("Sequence"), Expression::StarExpression(Expression::SeqExpression(Expression::NonTerminalExpression("Alt"), Expression::NonTerminalExpression("Sequence")))));
    $automata["Sequence"] = new Automaton("Sequence", NonTerminalMode::NORMAL, Expression::PlusExpression(Expression::NonTerminalExpression("Unit")));
    $automata["Unit"] = new Automaton("Unit", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::StarExpression(Expression::AltExpression(Expression::NonTerminalExpression("Prefix"), Expression::NonTerminalExpression("Label"))), Expression::AltExpression(Expression::SeqExpression(Expression::NonTerminalExpression("Identifier"), Expression::NotExpression(Expression::AltExpression(Expression::NonTerminalExpression("LeftArrow"), Expression::NonTerminalExpression("PruneArrow"), Expression::NonTerminalExpression("VoidArrow")))), Expression::SeqExpression(Expression::NonTerminalExpression("Open"), Expression::NonTerminalExpression("Alternation"), Expression::NonTerminalExpression("Close")), Expression::NonTerminalExpression("Action"), Expression::NonTerminalExpression("Literal"), Expression::NonTerminalExpression("CaseLiteral"), Expression::NonTerminalExpression("CharClass"), Expression::NonTerminalExpression("WildCard"))));
    $automata["Prefix"] = new Automaton("Prefix", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::CharClassExpression(array("!", "&", ":", "?"), array("*"), array("+")), Expression::NonTerminalExpression("Ws")));
    $automata["Label"] = new Automaton("Label", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::NonTerminalExpression("Identifier"), Expression::NonTerminalExpression("Ws"), Expression::VoidExpression(Expression::CharExpression("=")), Expression::NonTerminalExpression("Ws")));
    $automata["Action"] = new Automaton("Action", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::VoidExpression(Expression::CharExpression("@")), Expression::NonTerminalExpression("Identifier"), Expression::OptExpression(Expression::SeqExpression(Expression::VoidExpression(Expression::CharExpression("<")), Expression::NonTerminalExpression("Ws"), Expression::NonTerminalExpression("Identifier"), Expression::StarExpression(Expression::SeqExpression(Expression::NonTerminalExpression("Comma"), Expression::NonTerminalExpression("Identifier"))), Expression::VoidExpression(Expression::CharExpression(">")))), Expression::NonTerminalExpression("Ws")));
    $automata["Identifier"] = new Automaton("Identifier", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::CharClassExpression(array("_"), array("A", "a"), array("Z", "z")), Expression::StarExpression(Expression::CharClassExpression(array("-", "_"), array("0", "A", "a"), array("9", "Z", "z"))), Expression::NonTerminalExpression("Ws")));
    $automata["Literal"] = new Automaton("Literal", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::VoidExpression(Expression::CharClassExpression(array("'"), array(), array())), Expression::PlusExpression(Expression::SeqExpression(Expression::NotExpression(Expression::CharClassExpression(array("'"), array(), array())), Expression::AltExpression(Expression::NonTerminalExpression("LChar"), Expression::NonTerminalExpression("Hex")))), Expression::VoidExpression(Expression::CharClassExpression(array("'"), array(), array())), Expression::NonTerminalExpression("Ws")));
    $automata["CaseLiteral"] = new Automaton("CaseLiteral", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::VoidExpression(Expression::CharClassExpression(array("\""), array(), array())), Expression::PlusExpression(Expression::SeqExpression(Expression::NotExpression(Expression::CharClassExpression(array("\""), array(), array())), Expression::AltExpression(Expression::NonTerminalExpression("LChar"), Expression::NonTerminalExpression("Hex")))), Expression::VoidExpression(Expression::CharClassExpression(array("\""), array(), array())), Expression::NonTerminalExpression("Ws")));
    $automata["LChar"] = new Automaton("LChar", NonTerminalMode::NORMAL, Expression::AltExpression(Expression::SeqExpression(Expression::CharExpression("\\"), Expression::CharClassExpression(array("\"", "'", "\\", "n", "r", "t"), array(), array())), Expression::SeqExpression(Expression::NotExpression(Expression::CharExpression("\\")), Expression::NotExpression(Expression::NonTerminalExpression("EndOfLine")), Expression::AnyCharExpression())));
    $automata["CharClass"] = new Automaton("CharClass", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::VoidExpression(Expression::CharExpression("[")), Expression::StarExpression(Expression::SeqExpression(Expression::NotExpression(Expression::CharExpression("]")), Expression::NonTerminalExpression("Range"))), Expression::VoidExpression(Expression::CharExpression("]")), Expression::NonTerminalExpression("Ws")));
    $automata["Range"] = new Automaton("Range", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::AltExpression(Expression::NonTerminalExpression("Char"), Expression::NonTerminalExpression("Hex")), Expression::OptExpression(Expression::SeqExpression(Expression::VoidExpression(Expression::CharExpression("-")), Expression::AltExpression(Expression::NonTerminalExpression("Char"), Expression::NonTerminalExpression("Hex"))))));
    $automata["Char"] = new Automaton("Char", NonTerminalMode::NORMAL, Expression::AltExpression(Expression::SeqExpression(Expression::CharExpression("\\"), Expression::CharClassExpression(array("-", "n", "r", "t"), array("\\"), array("]"))), Expression::SeqExpression(Expression::NotExpression(Expression::CharExpression("\\")), Expression::NotExpression(Expression::CharExpression("]")), Expression::NotExpression(Expression::NonTerminalExpression("EndOfLine")), Expression::AnyCharExpression())));
    $automata["Hex"] = new Automaton("Hex", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::VoidExpression(Expression::SeqExpression(Expression::CharExpression("\\"), Expression::CharExpression("u"), Expression::CharExpression("{"))), Expression::CharClassExpression(array(), array("0", "A", "a"), array("9", "F", "f")), Expression::OptExpression(Expression::CharClassExpression(array(), array("0", "A", "a"), array("9", "F", "f"))), Expression::OptExpression(Expression::CharClassExpression(array(), array("0", "A", "a"), array("9", "F", "f"))), Expression::OptExpression(Expression::CharClassExpression(array(), array("0", "A", "a"), array("9", "F", "f"))), Expression::OptExpression(Expression::CharClassExpression(array(), array("0", "A", "a"), array("9", "F", "f"))), Expression::OptExpression(Expression::CharClassExpression(array(), array("0", "A", "a"), array("9", "F", "f"))), Expression::VoidExpression(Expression::CharExpression("}"))));
    $automata["WildCard"] = new Automaton("WildCard", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::VoidExpression(Expression::CharExpression(".")), Expression::NonTerminalExpression("Ws")));
    $automata["LeftArrow"] = new Automaton("LeftArrow", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::VoidExpression(Expression::SeqExpression(Expression::CharExpression("<"), Expression::CharExpression("-"))), Expression::NonTerminalExpression("Ws")));
    $automata["PruneArrow"] = new Automaton("PruneArrow", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::VoidExpression(Expression::SeqExpression(Expression::CharExpression("<"), Expression::CharExpression("="))), Expression::NonTerminalExpression("Ws")));
    $automata["VoidArrow"] = new Automaton("VoidArrow", NonTerminalMode::NORMAL, Expression::SeqExpression(Expression::VoidExpression(Expression::SeqExpression(Expression::CharExpression("<"), Expression::CharExpression(":"))), Expression::NonTerminalExpression("Ws")));
    $automata["Alt"] = new Automaton("Alt", NonTerminalMode::VOIDING, Expression::SeqExpression(Expression::CharExpression("|"), Expression::NonTerminalExpression("Ws")));
    $automata["Open"] = new Automaton("Open", NonTerminalMode::VOIDING, Expression::SeqExpression(Expression::CharExpression("("), Expression::NonTerminalExpression("Ws")));
    $automata["Close"] = new Automaton("Close", NonTerminalMode::VOIDING, Expression::SeqExpression(Expression::CharExpression(")"), Expression::NonTerminalExpression("Ws")));
    $automata["Comma"] = new Automaton("Comma", NonTerminalMode::VOIDING, Expression::SeqExpression(Expression::CharExpression(","), Expression::NonTerminalExpression("Ws")));
    $automata["SComment"] = new Automaton("SComment", NonTerminalMode::VOIDING, Expression::SeqExpression(Expression::CharExpression("#"), Expression::StarExpression(Expression::SeqExpression(Expression::NotExpression(Expression::NonTerminalExpression("EndOfLine")), Expression::AnyCharExpression())), Expression::AltExpression(Expression::NonTerminalExpression("EndOfLine"), Expression::NotExpression(Expression::AnyCharExpression()))));
    $automata["MComment"] = new Automaton("MComment", NonTerminalMode::VOIDING, Expression::SeqExpression(Expression::SeqExpression(Expression::CharExpression("/"), Expression::CharExpression("*")), Expression::StarExpression(Expression::AltExpression(Expression::NonTerminalExpression("MComment"), Expression::SeqExpression(Expression::NotExpression(Expression::SeqExpression(Expression::CharExpression("*"), Expression::CharExpression("/"))), Expression::AnyCharExpression()))), Expression::SeqExpression(Expression::CharExpression("*"), Expression::CharExpression("/"))));
    $automata["EndOfLine"] = new Automaton("EndOfLine", NonTerminalMode::VOIDING, Expression::AltExpression(Expression::SeqExpression(Expression::CharExpression("\r"), Expression::CharExpression("\n")), Expression::CharExpression("\n"), Expression::CharExpression("\r")));
    $automata["Ws"] = new Automaton("Ws", NonTerminalMode::VOIDING, Expression::StarExpression(Expression::AltExpression(Expression::CharClassExpression(array("\t", " "), array(), array()), Expression::NonTerminalExpression("EndOfLine"), Expression::NonTerminalExpression("SComment"), Expression::NonTerminalExpression("MComment"))));
$config = new ParserConfig($automata, "Grammar");
parent::__construct($config);
}
}
